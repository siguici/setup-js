name: Setup JavaScript/TypeScript Environment

branding:
  icon: settings
  color: yellow

description: |
  This action sets up the runtime, installs dependencies, and runs scripts for Node.js, Deno, or Bun.

inputs:
  runtime:
    description: 'The runtime to use (node, deno, or bun)'
    required: false
    default: node
  version:
    description: 'The version of the runtime'
    required: false
    default: latest
  pm:
    description: 'Package manager to use (npm, yarn, pnpm)'
    required: false
    default: npm
  scripts:
    description: 'A comma-separated list of scripts to run in order (e.g., lint, build, test)'
    required: false

runs:
  using: 'composite'
  steps:
    - name: 🚚 Checkout repository
      uses: actions/checkout@v4

    - name: 🐳 Set up Node.js
      if: ${{ inputs.runtime == 'node' }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.version }}

    - name: 🦕 Set up Deno
      if: ${{ inputs.runtime == 'deno' }}
      uses: denoland/setup-deno@v2
      with:
        deno-version: ${{ inputs.version }}

    - name: 🍞 Set up Bun
      if: ${{ inputs.runtime == 'bun' }}
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: ${{ inputs.version }}

    - name: 📦 Install dependencies
      if: ${{ inputs.scripts }}
      run: |
        case "${{ inputs.runtime }}" in
          "node")
            echo "⚙️ Installing ${{ inputs.pm }} dependencies"
            corepack enable
            if [[ "${{ inputs.pm }}" == "yarn" ]]; then
              YARN_VERSION=$(yarn --version)
              jq ".packageManager = \"yarn@$YARN_VERSION\"" package.json > yarn-package.json
              mv package.json main-package.json
              mv yarn-package.json package.json
            fi
            corepack prepare ${{ inputs.pm }}@latest --activate
            if [[ "${{ inputs.pm }}" == "npm" ]]; then
              npm install --legacy-peer-deps
            else
              ${{ inputs.pm }} install
            fi
            ;;
          "deno")
            echo "⚙️ Installing Deno dependencies"
            deno install
            ;;
          "bun")
            echo "⚙️ Installing Bun dependencies"
            bun install
            ;;
          *)
            echo "❌ Invalid runtime specified: ${{ inputs.runtime }}"
            exit 1
            ;;
        esac
      shell: bash

    - name: 🔨 Execute scripts
      run: |
        chmod +x ./scripts/run.sh
        ./scripts/run.sh
      shell: bash
      env:
        scripts: ${{ inputs.scripts }}
        runtime: ${{ inputs.runtime }}
        pm: ${{ inputs.pm }}

    - name: 🎉 Finish test workflow
      run: echo "🎯 Tests completed for ${{ inputs.runtime }} ${{ inputs.version }}!"
      shell: bash
